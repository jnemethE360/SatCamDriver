
//***************************************************************************
//*																			*
//*																			*
//*																			*
//*  DO NOT MODIFY THIS FILE - IT IS AUTOGENERATED FROM THE DRIVER DESIGN   *
//*																			*
//*																			*
//*																			*
//***************************************************************************

using System;
using System.Drawing;
using System.ServiceModel;
using System.Windows.Forms;
using System.Diagnostics.CodeAnalysis;
using System.CodeDom.Compiler;
using CNL.IPSecurityCenter.Driver;
using CNL.IPSecurityCenter.Driver.Attributes;
using CNL.IPSecurityCenter.Driver.ServiceLocation;
using CNL.IPSecurityCenter.Driver.Video;
using CNL.IPSecurityCenter.Driver.Video.DeviceConnection;
using CNL.IPSecurityCenter.Driver.Video.Playback;
using CNL.IPSecurityCenter.Driver.Video.Export;
using CNL.IPSecurityCenter.Driver.Ptz;
using VideoDeviceInterfaceDescriptor = CNL.IPSecurityCenter.Driver.Video.DeviceConnection.DeviceInterfaceDescriptor;



namespace Edge360.IPSC.Driver.Axis
{
	[GeneratedCode("Driver.Design", "4.9.2.0")]
	[Serializable]
    [ServiceBehaviorAttribute(InstanceContextMode = InstanceContextMode.Single)]
	public abstract class VideoServerBase : Device , IDisposable     {
		// -- constructors

		/// <summary>
        /// Initializes a new instance of the <see cref="VideoServerBase"/> class.
        /// </summary>
        protected VideoServerBase()
        {
			        }

		// -- fields

		
		[NonSerialized]
		private bool disposed;

		
        // -- events

		//Presets - child
		
		//Export
		
		[field: NonSerialized]
		public event EventHandler<VideoExportCompletedEventArgs> Completed;

		[field: NonSerialized]
        public event EventHandler<VideoExportProgressEventArgs> Progress;

		
		//Event declarations
		
		
        // -- properties

		//Secure device
		
		public virtual string Username { get; set;}
        public virtual string Password { get; set; }

		
		//Network device
		
        public virtual string IP { get; set; }
        public virtual int Port { get; set; }

		
		
        public virtual TimeSpan RetryInterval { get; set; }
        public virtual TimeSpan Timeout { get; set; }

		
		//PTZ
		
		//Presets - child
		
		//Export
		
		public virtual string FileExtension
        {
            get { return ".avi"; }
        }

        public virtual int MaximumExports
        {
            get { return 1; }
        }

		
		
		/// <summary>
        /// 
        /// </summary>
        public virtual int zoomSpeed { get; set; }

		
		// -- public methods

		
		public void Dispose()
        {
            Dispose(true);
            GC.SuppressFinalize(this);
        }

		
		//Network device
				
		public abstract void Connect();

        public abstract void Disconnect();

		
		//Video export
		
		public abstract void Pause(VideoExportTask task);

        public abstract void Cancel(VideoExportTask task);

        public abstract void Start(VideoExportTask task);

		
		//Presets - parent
		
		public abstract void SelectPreset(Preset preset, Guid interfaceIdentifier);

		
		//Presets - child
		
		
        // -- protected methods

		
		//Child
		
        protected virtual void Dispose(bool disposing)
        {
            if (!disposed)
            {
                if (disposing)
                {
                }

                disposed = true;
            }
        }

		
		//Presets - child
		
		//Export
		
		internal virtual void OnProgress(VideoExportProgressEventArgs e)
        {
            if(Progress != null)
                Progress.Invoke(this, e);
        }

        internal virtual void OnCompleted(VideoExportCompletedEventArgs e)
        {
            if (Completed != null)
                Completed.Invoke(this, e);
        }

		
				
		    }
}


namespace Edge360.IPSC.Driver.Axis
{
	[GeneratedCode("Driver.Design", "4.9.2.0")]
	[Serializable]
    [ServiceBehaviorAttribute(InstanceContextMode = InstanceContextMode.Single)]
	public abstract class VideoCameraBase : Device     {
		// -- constructors

		/// <summary>
        /// Initializes a new instance of the <see cref="VideoCameraBase"/> class.
        /// </summary>
        protected VideoCameraBase()
        {
			
            Interfaces.Add(new DeviceInterface(DeviceInterfaceType.Video, "Video Output"));

			        }

		// -- fields

		
        // -- events

		//Presets - child
				
		[field: NonSerialized] 
        public event EventHandler<PresetSelectedEventArgs> PresetSelected;

		
		//Export
		
		//Event declarations
		
		
        // -- properties

		//Secure device
		
		//Network device
		
		
		//PTZ
		
		public virtual bool PtzSupported { get; set; }

		
		//Presets - child
		
		public virtual bool PresetsSupported { get; set; }

		
		//Export
		
		
		// -- public methods

		
		//Network device
		
		//Video export
		
		//Presets - parent
		
		//Presets - child
		
		public abstract PresetCollection GetPresets();

		public abstract void SelectPreset(int number);

		public abstract void Remove(Preset preset);

		public abstract void Update(Preset preset);

		
		
        // -- protected methods

		
		//Child
		
		//Presets - child
		
		/// <summary>
        /// Raises the <see cref="E:PresetSelected"/> event.
        /// </summary>
        /// <param name="e">The <see cref="PresetSelectedEventArgs"/> instance containing the event data.</param>
        internal void OnPresetSelected(PresetSelectedEventArgs e)
        {
            if (e == null)
                throw new ArgumentNullException("e");

            if (PresetSelected != null)
                PresetSelected.Invoke(this, e);
        }

		
		//Export
		
				
		    }
}

